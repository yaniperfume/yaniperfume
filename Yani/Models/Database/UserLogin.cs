// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace Yani.Models.Database;

[Index("Username", Name = "UQ__UserLogi__536C85E4AECB2DB9", IsUnique = true)]
[Index("Phone", Name = "UQ__UserLogi__5C7E359EA0823D95", IsUnique = true)]
[Index("Email", Name = "UQ__UserLogi__A9D1053439AC9AA9", IsUnique = true)]
public partial class UserLogin
{
    [Key]
    [Column("LoginID")]
    public int LoginId { get; set; }

    [Column("UserID")]
    public int? UserId { get; set; }

    [Column("UserGroupID")]
    public int? UserGroupId { get; set; }

    [StringLength(50)]
    public string Username { get; set; }

    [StringLength(255)]
    public string Email { get; set; }

    [StringLength(20)]
    public string Phone { get; set; }

    [StringLength(255)]
    public string PasswordHash { get; set; }

    [StringLength(255)]
    public string PasswordResetToken { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? PasswordResetTokenExpiry { get; set; }

    public bool IsEmailVerified { get; set; }

    public bool IsAccountVerified { get; set; }

    public bool TwoFactorEnabled { get; set; }

    [StringLength(255)]
    public string TwoFactorSecretKey { get; set; }

    [StringLength(255)]
    public string TwoFactorBackupCodes { get; set; }

    public int FailedLoginAttempts { get; set; }

    public bool IsLockedOut { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? LastPasswordChangeDate { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? PasswordExpirationDate { get; set; }

    [StringLength(255)]
    public string PasswordHistory { get; set; }

    public bool IsPasswordExpired { get; set; }

    public int? CreatedBy { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? RegistrationDate { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? LastLoginDate { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? CreatedDate { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? UpdateDate { get; set; }

    public int? UpdatedBy { get; set; }

    [ForeignKey("CreatedBy")]
    [InverseProperty("UserLoginCreatedByNavigation")]
    public virtual Users CreatedByNavigation { get; set; }

    [ForeignKey("UpdatedBy")]
    [InverseProperty("UserLoginUpdatedByNavigation")]
    public virtual Users UpdatedByNavigation { get; set; }

    [ForeignKey("UserId")]
    [InverseProperty("UserLoginUser")]
    public virtual Users User { get; set; }

    [ForeignKey("UserGroupId")]
    [InverseProperty("UserLogin")]
    public virtual UserGroups UserGroup { get; set; }
}