// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Yani.Models.Database;

public partial class BeShopContext : DbContext
{
    public BeShopContext()
    {
    }

    public BeShopContext(DbContextOptions<BeShopContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Attachments> Attachments { get; set; }

    public virtual DbSet<BlogAttachments> BlogAttachments { get; set; }

    public virtual DbSet<Blogs> Blogs { get; set; }

    public virtual DbSet<Brand> Brand { get; set; }

    public virtual DbSet<CartItems> CartItems { get; set; }

    public virtual DbSet<Carts> Carts { get; set; }

    public virtual DbSet<Categories> Categories { get; set; }

    public virtual DbSet<Cities> Cities { get; set; }

    public virtual DbSet<Coupons> Coupons { get; set; }

    public virtual DbSet<Ingredient> Ingredient { get; set; }

    public virtual DbSet<Inventory> Inventory { get; set; }

    public virtual DbSet<LanguageTranslations> LanguageTranslations { get; set; }

    public virtual DbSet<Languages> Languages { get; set; }

    public virtual DbSet<Logs> Logs { get; set; }

    public virtual DbSet<OrderItems> OrderItems { get; set; }

    public virtual DbSet<OrderStatuses> OrderStatuses { get; set; }

    public virtual DbSet<Orders> Orders { get; set; }

    public virtual DbSet<PaymentMethods> PaymentMethods { get; set; }

    public virtual DbSet<ProductAttachments> ProductAttachments { get; set; }

    public virtual DbSet<ProductIngredient> ProductIngredient { get; set; }

    public virtual DbSet<Products> Products { get; set; }

    public virtual DbSet<RefundStatuses> RefundStatuses { get; set; }

    public virtual DbSet<Refunds> Refunds { get; set; }

    public virtual DbSet<ReviewAttachments> ReviewAttachments { get; set; }

    public virtual DbSet<Reviews> Reviews { get; set; }

    public virtual DbSet<ScentNote> ScentNote { get; set; }

    public virtual DbSet<Settings> Settings { get; set; }

    public virtual DbSet<Size> Size { get; set; }

    public virtual DbSet<Sms> Sms { get; set; }

    public virtual DbSet<States> States { get; set; }

    public virtual DbSet<Subcategories> Subcategories { get; set; }

    public virtual DbSet<SupportCategories> SupportCategories { get; set; }

    public virtual DbSet<SupportMessages> SupportMessages { get; set; }

    public virtual DbSet<SupportTicketStatuses> SupportTicketStatuses { get; set; }

    public virtual DbSet<SupportTickets> SupportTickets { get; set; }

    public virtual DbSet<UserAddresses> UserAddresses { get; set; }

    public virtual DbSet<UserGroups> UserGroups { get; set; }

    public virtual DbSet<UserLogin> UserLogin { get; set; }

    public virtual DbSet<Users> Users { get; set; }

    public virtual DbSet<WebsiteVisitors> WebsiteVisitors { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.UseCollation("Persian_100_CI_AI");

        modelBuilder.Entity<Attachments>(entity =>
        {
            entity.HasKey(e => e.AttachmentId).HasName("PK__Attachme__442C64DEF43770EC");

            entity.Property(e => e.CreatedDate).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.AttachmentsCreatedByNavigation)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Attachmen__Creat__3F3159AB");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.AttachmentsUpdatedByNavigation).HasConstraintName("FK__Attachmen__Updat__40257DE4");
        });

        modelBuilder.Entity<BlogAttachments>(entity =>
        {
            entity.HasKey(e => new { e.BlogId, e.AttachmentId }).HasName("PK__BlogAtta__A075581D30129C4A");

            entity.HasOne(d => d.Attachment).WithMany(p => p.BlogAttachments)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__BlogAttac__Attac__4B973090");

            entity.HasOne(d => d.Blog).WithMany(p => p.BlogAttachments)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__BlogAttac__BlogI__4AA30C57");
        });

        modelBuilder.Entity<Blogs>(entity =>
        {
            entity.HasKey(e => e.BlogId).HasName("PK__Blogs__54379E503030D176");

            entity.Property(e => e.CreatedDate).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.UpdateDate).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.BlogsCreatedByNavigation)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Blogs__CreatedBy__284DF453");

            entity.HasOne(d => d.Review).WithMany(p => p.Blogs)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Blogs_Reviews");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.BlogsUpdatedByNavigation).HasConstraintName("FK__Blogs__UpdatedBy__2759D01A");
        });

        modelBuilder.Entity<Brand>(entity =>
        {
            entity.HasKey(e => e.BrandId).HasName("PK__Brand__DAD4F3BE5835F902");

            entity.Property(e => e.CreatedDate).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.UpdateDate).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.BrandCreatedByNavigation).HasConstraintName("FK__Brand__CreatedBy__36D11DD4");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.BrandUpdatedByNavigation).HasConstraintName("FK__Brand__UpdatedBy__35DCF99B");
        });

        modelBuilder.Entity<CartItems>(entity =>
        {
            entity.HasKey(e => e.CartItemId).HasName("PK__CartItem__488B0B2A3133811A");

            entity.HasOne(d => d.Cart).WithMany(p => p.CartItems)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__CartItems__CartI__02284B6B");

            entity.HasOne(d => d.Product).WithMany(p => p.CartItems)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__CartItems__Produ__031C6FA4");
        });

        modelBuilder.Entity<Carts>(entity =>
        {
            entity.HasKey(e => e.CartId).HasName("PK__Carts__51BCD797CEA5AF88");

            entity.HasOne(d => d.User).WithMany(p => p.Carts)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Carts__UserID__7F4BDEC0");
        });

        modelBuilder.Entity<Categories>(entity =>
        {
            entity.HasKey(e => e.CategoryId).HasName("PK__Categori__19093A2B46C66ECE");

            entity.Property(e => e.CreatedDate).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.UpdateDate).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.CategoriesCreatedByNavigation)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Categorie__Creat__51851410");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.CategoriesUpdatedByNavigation).HasConstraintName("FK__Categorie__Updat__5090EFD7");
        });

        modelBuilder.Entity<Cities>(entity =>
        {
            entity.HasOne(d => d.State).WithMany(p => p.Cities).HasConstraintName("FK_Cities_States");
        });

        modelBuilder.Entity<Coupons>(entity =>
        {
            entity.HasKey(e => e.CouponId).HasName("PK__Coupons__384AF1DA122B4B32");

            entity.Property(e => e.CreatedDate).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.DiscountPercent).HasDefaultValueSql("((0))");
            entity.Property(e => e.MaxUses).HasDefaultValueSql("((0))");
            entity.Property(e => e.UpdateDate).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.Uses).HasDefaultValueSql("((0))");

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.CouponsCreatedByNavigation)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Coupons__Created__789EE131");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.CouponsUpdatedByNavigation).HasConstraintName("FK__Coupons__Updated__77AABCF8");
        });

        modelBuilder.Entity<Ingredient>(entity =>
        {
            entity.HasKey(e => e.IngredientId).HasName("PK__Ingredie__BEAEB27A7D7FA4BD");

            entity.Property(e => e.CreatedDate).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.UpdateDate).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.IngredientCreatedByNavigation)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Ingredien__Creat__4AD81681");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.IngredientUpdatedByNavigation).HasConstraintName("FK__Ingredien__Updat__49E3F248");
        });

        modelBuilder.Entity<Inventory>(entity =>
        {
            entity.HasKey(e => e.ProductId).HasName("PK__Inventor__B40CC6EDA66E2B10");

            entity.Property(e => e.ProductId).ValueGeneratedNever();
            entity.Property(e => e.CreatedDate).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.Quantity).HasDefaultValueSql("((0))");
            entity.Property(e => e.UpdateDate).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.InventoryCreatedByNavigation)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Inventory__Creat__6C390A4C");

            entity.HasOne(d => d.Product).WithOne(p => p.Inventory)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Inventory__Produ__6D2D2E85");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.InventoryUpdatedByNavigation).HasConstraintName("FK__Inventory__Updat__6B44E613");
        });

        modelBuilder.Entity<LanguageTranslations>(entity =>
        {
            entity.HasKey(e => e.LanguageTranslationId).HasName("PK__Language__28DA87CD087AA4A1");

            entity.Property(e => e.CreatedDate).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.UpdateDate).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.LanguageTranslationsCreatedByNavigation)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__LanguageT__Creat__0BE6BFCF");

            entity.HasOne(d => d.Language).WithMany(p => p.LanguageTranslations)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__LanguageT__Langu__0CDAE408");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.LanguageTranslationsUpdatedByNavigation).HasConstraintName("FK__LanguageT__Updat__0AF29B96");
        });

        modelBuilder.Entity<Languages>(entity =>
        {
            entity.HasKey(e => e.LanguageId).HasName("PK__Language__B938558BA0DE9954");
        });

        modelBuilder.Entity<Logs>(entity =>
        {
            entity.HasKey(e => e.LogId).HasName("PK__Logs__5E5499A8E79F50BA");

            entity.Property(e => e.CreatedDate).HasDefaultValueSql("(getdate())");
        });

        modelBuilder.Entity<OrderItems>(entity =>
        {
            entity.HasKey(e => e.OrderItemId).HasName("PK__OrderIte__57ED06A18CD78F49");

            entity.Property(e => e.Quantity).HasDefaultValueSql("((0))");

            entity.HasOne(d => d.Order).WithMany(p => p.OrderItems)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__OrderItem__Order__116A8EFB");

            entity.HasOne(d => d.Product).WithMany(p => p.OrderItems)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__OrderItem__Produ__125EB334");
        });

        modelBuilder.Entity<OrderStatuses>(entity =>
        {
            entity.HasKey(e => e.OrderStatusId).HasName("PK__OrderSta__BC674F4182E369BA");

            entity.Property(e => e.CreatedDate).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.UpdateDate).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.OrderStatusesCreatedByNavigation)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__OrderStat__Creat__77DFC722");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.OrderStatusesUpdatedByNavigation).HasConstraintName("FK__OrderStat__Updat__76EBA2E9");
        });

        modelBuilder.Entity<Orders>(entity =>
        {
            entity.HasKey(e => e.OrderId).HasName("PK__Orders__C3905BAF5531CA13");

            entity.HasOne(d => d.Address).WithMany(p => p.Orders)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Orders__AddressI__08D548FA");

            entity.HasOne(d => d.Coupon).WithMany(p => p.Orders).HasConstraintName("FK__Orders__CouponID__0BB1B5A5");

            entity.HasOne(d => d.OrderStatus).WithMany(p => p.Orders)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Orders__OrderSta__0ABD916C");

            entity.HasOne(d => d.PaymentMethod).WithMany(p => p.Orders)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Orders__PaymentM__09C96D33");

            entity.HasOne(d => d.User).WithMany(p => p.Orders)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Orders__UserID__0CA5D9DE");
        });

        modelBuilder.Entity<PaymentMethods>(entity =>
        {
            entity.HasKey(e => e.PaymentMethodId).HasName("PK__PaymentM__DC31C1F3691FB6F4");

            entity.Property(e => e.CreatedDate).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.UpdateDate).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.PaymentMethodsCreatedByNavigation)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__PaymentMe__Creat__7132C993");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.PaymentMethodsUpdatedByNavigation).HasConstraintName("FK__PaymentMe__Updat__703EA55A");
        });

        modelBuilder.Entity<ProductAttachments>(entity =>
        {
            entity.HasKey(e => new { e.ProductId, e.AttachmentId }).HasName("PK__ProductA__404E00A02BCD1033");

            entity.HasOne(d => d.Attachment).WithMany(p => p.ProductAttachments)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ProductAt__Attac__43F60EC8");

            entity.HasOne(d => d.Product).WithMany(p => p.ProductAttachments)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ProductAt__Produ__4301EA8F");
        });

        modelBuilder.Entity<ProductIngredient>(entity =>
        {
            entity.HasKey(e => new { e.ProductId, e.IngredientId }).HasName("PK__ProductI__0FE62DCA9773D289");

            entity.HasOne(d => d.Ingredient).WithMany(p => p.ProductIngredient)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ProductIn__Ingre__7C6F7215");

            entity.HasOne(d => d.Product).WithMany(p => p.ProductIngredient)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ProductIn__Produ__7B7B4DDC");
        });

        modelBuilder.Entity<Products>(entity =>
        {
            entity.HasKey(e => e.ProductId).HasName("PK__Products__B40CC6ED8E17D7BE");

            entity.Property(e => e.CreatedDate).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.UpdateDate).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Brand).WithMany(p => p.Products)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Products__BrandI__60C757A0");

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.ProductsCreatedByNavigation)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Products__Create__5FD33367");

            entity.HasOne(d => d.ScentNote).WithMany(p => p.Products)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Products__ScentN__61BB7BD9");

            entity.HasOne(d => d.Size).WithMany(p => p.Products)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Products__SizeID__62AFA012");

            entity.HasOne(d => d.Subcategory).WithMany(p => p.Products)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Products__Subcat__63A3C44B");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.ProductsUpdatedByNavigation).HasConstraintName("FK__Products__Update__5EDF0F2E");
        });

        modelBuilder.Entity<RefundStatuses>(entity =>
        {
            entity.HasKey(e => e.RefundStatusId).HasName("PK__RefundSt__CFFDB048E1D099A1");

            entity.Property(e => e.CreatedDate).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.UpdateDate).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.RefundStatusesCreatedByNavigation)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__RefundSta__Creat__7E8CC4B1");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.RefundStatusesUpdatedByNavigation).HasConstraintName("FK__RefundSta__Updat__7D98A078");
        });

        modelBuilder.Entity<Refunds>(entity =>
        {
            entity.HasKey(e => e.RefundId).HasName("PK__Refunds__725AB9007E0832F7");

            entity.Property(e => e.CreatedDate).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.UpdateDate).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.RefundsCreatedByNavigation)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Refunds__Created__190BB0C3");

            entity.HasOne(d => d.Order).WithMany(p => p.Refunds)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Refunds__OrderID__19FFD4FC");

            entity.HasOne(d => d.RefundStatus).WithMany(p => p.Refunds)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Refunds__RefundS__1AF3F935");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.RefundsUpdatedByNavigation).HasConstraintName("FK__Refunds__Updated__18178C8A");
        });

        modelBuilder.Entity<ReviewAttachments>(entity =>
        {
            entity.HasKey(e => new { e.ReviewId, e.AttachmentId }).HasName("PK__ReviewAt__80FEBFE306DAD862");

            entity.HasOne(d => d.Attachment).WithMany(p => p.ReviewAttachments)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ReviewAtt__Attac__47C69FAC");

            entity.HasOne(d => d.Review).WithMany(p => p.ReviewAttachments)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ReviewAtt__Revie__46D27B73");
        });

        modelBuilder.Entity<Reviews>(entity =>
        {
            entity.HasKey(e => e.ReviewId).HasName("PK__Reviews__74BC79AEC7DF1A33");

            entity.Property(e => e.Rating).HasDefaultValueSql("((5))");

            entity.HasOne(d => d.Product).WithMany(p => p.Reviews)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Reviews_Products");

            entity.HasOne(d => d.User).WithMany(p => p.Reviews)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Reviews_Users");
        });

        modelBuilder.Entity<ScentNote>(entity =>
        {
            entity.HasKey(e => e.ScentNoteId).HasName("PK__ScentNot__866807A1516DB2D5");

            entity.Property(e => e.CreatedDate).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.UpdateDate).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.ScentNoteCreatedByNavigation)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ScentNote__Creat__3D7E1B63");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.ScentNoteUpdatedByNavigation).HasConstraintName("FK__ScentNote__Updat__3C89F72A");
        });

        modelBuilder.Entity<Settings>(entity =>
        {
            entity.HasKey(e => e.SettingId).HasName("PK__Settings__54372AFD005779E4");
        });

        modelBuilder.Entity<Size>(entity =>
        {
            entity.HasKey(e => e.SizeId).HasName("PK__Size__83BD095A337F550F");

            entity.Property(e => e.CreatedDate).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.UpdateDate).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.SizeCreatedByNavigation)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Size__CreatedBy__442B18F2");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.SizeUpdatedByNavigation).HasConstraintName("FK__Size__UpdatedBy__4336F4B9");
        });

        modelBuilder.Entity<Sms>(entity =>
        {
            entity.HasKey(e => e.MessageId).HasName("PK__SMS__C87C0C9C8773DDD3");

            entity.Property(e => e.MessageId).ValueGeneratedNever();
            entity.Property(e => e.CreatedDate).HasDefaultValueSql("(getdate())");
        });

        modelBuilder.Entity<Subcategories>(entity =>
        {
            entity.HasKey(e => e.SubcategoryId).HasName("PK__Subcateg__9C4E707D95735403");

            entity.Property(e => e.CreatedDate).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.UpdateDate).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.Category).WithMany(p => p.Subcategories)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Subcatego__Categ__592635D8");

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.SubcategoriesCreatedByNavigation)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Subcatego__Creat__5832119F");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.SubcategoriesUpdatedByNavigation).HasConstraintName("FK__Subcatego__Updat__573DED66");
        });

        modelBuilder.Entity<SupportCategories>(entity =>
        {
            entity.HasKey(e => e.CategoryId).HasName("PK__SupportC__19093A2BD4669AFD");

            entity.Property(e => e.CategoryId).ValueGeneratedNever();
            entity.Property(e => e.CreatedDate).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.UpdateDate).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.SupportCategoriesCreatedByNavigation)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__SupportCa__Creat__2FEF161B");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.SupportCategoriesUpdatedByNavigation).HasConstraintName("FK__SupportCa__Updat__2EFAF1E2");
        });

        modelBuilder.Entity<SupportMessages>(entity =>
        {
            entity.HasKey(e => e.MessageId).HasName("PK__SupportM__C87C037CA77CC6D5");

            entity.HasOne(d => d.Ticket).WithMany(p => p.SupportMessages)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SupportMessages_SupportTickets");

            entity.HasOne(d => d.User).WithMany(p => p.SupportMessages)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SupportMessages_Users");
        });

        modelBuilder.Entity<SupportTicketStatuses>(entity =>
        {
            entity.HasKey(e => e.SupportTicketStatusId).HasName("PK__SupportT__2381ADD32BD34D2A");

            entity.Property(e => e.CreatedDate).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.UpdateDate).HasDefaultValueSql("(getdate())");

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.SupportTicketStatusesCreatedByNavigation)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__SupportTi__Creat__0539C240");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.SupportTicketStatusesUpdatedByNavigation).HasConstraintName("FK__SupportTi__Updat__04459E07");
        });

        modelBuilder.Entity<SupportTickets>(entity =>
        {
            entity.HasKey(e => e.TicketId).HasName("PK__SupportT__712CC627E58A9D9C");

            entity.Property(e => e.IsTicketOpen).HasDefaultValueSql("((1))");

            entity.HasOne(d => d.Admin).WithMany(p => p.SupportTicketsAdmin)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SupportTickets_Admins");

            entity.HasOne(d => d.Category).WithMany(p => p.SupportTickets)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SupportTickets_SupportCategories");

            entity.HasOne(d => d.SupportTicketStatus).WithMany(p => p.SupportTickets)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__SupportTi__Suppo__33BFA6FF");

            entity.HasOne(d => d.User).WithMany(p => p.SupportTicketsUser)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SupportTickets_Users");
        });

        modelBuilder.Entity<UserAddresses>(entity =>
        {
            entity.HasKey(e => e.AddressId).HasName("PK__UserAddr__091C2A1B3AA083C8");

            entity.HasOne(d => d.City).WithMany(p => p.UserAddresses)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__UserAddre__CityI__10AB74EC");

            entity.HasOne(d => d.User).WithMany(p => p.UserAddresses)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__UserAddre__UserI__0FB750B3");
        });

        modelBuilder.Entity<UserGroups>(entity =>
        {
            entity.HasKey(e => e.UserGroupId).HasName("PK__UserGrou__FA5A61E004416180");

            entity.Property(e => e.CreatedDate).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.LastLoginDate).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.ListPermission).HasDefaultValueSql("('*')");
            entity.Property(e => e.RegistrationDate).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.UpdateDate).HasDefaultValueSql("(getdate())");
        });

        modelBuilder.Entity<UserLogin>(entity =>
        {
            entity.HasKey(e => e.LoginId).HasName("PK__UserLogi__4DDA2838463D6640");

            entity.Property(e => e.CreatedDate).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.LastLoginDate).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.RegistrationDate).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.UpdateDate).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.UserGroupId).HasDefaultValueSql("((2))");

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.UserLoginCreatedByNavigation).HasConstraintName("FK__UserLogin__Creat__795DFB40");

            entity.HasOne(d => d.UpdatedByNavigation).WithMany(p => p.UserLoginUpdatedByNavigation).HasConstraintName("FK__UserLogin__Updat__7869D707");

            entity.HasOne(d => d.UserGroup).WithMany(p => p.UserLogin).HasConstraintName("FK__UserLogin__UserG__7775B2CE");

            entity.HasOne(d => d.User).WithMany(p => p.UserLoginUser).HasConstraintName("FK__UserLogin__UserI__7A521F79");
        });

        modelBuilder.Entity<Users>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("PK__Users__1788CCAC48CA5854");

            entity.Property(e => e.CreatedDate).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.UpdateDate).HasDefaultValueSql("(getdate())");
        });

        modelBuilder.Entity<WebsiteVisitors>(entity =>
        {
            entity.HasKey(e => e.VisitorId).HasName("PK__WebsiteV__B121AFA8E001BD90");

            entity.HasOne(d => d.User).WithMany(p => p.WebsiteVisitors).HasConstraintName("FK__WebsiteVi__UserI__4E739D3B");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}